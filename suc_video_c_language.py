# -*- coding: utf-8 -*-
"""suc_video_C_language.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18BooMlc1-Lsw4-qcFAgNXPIwEEnjFq27
"""



#include <stdio.h>

int main() {
    // طباعة رسالة على الشاشة
    printf("مرحبًا بالعالم!\n");
    return 0;
}

!gcc hello.c -o hello

!./hello





#include <stdio.h>

int main() {
    FILE *fp;

    // فتح الملف للكتابة (أو إنشاؤه إذا لم يكن موجودًا)
    fp = fopen("hello1.c", "w");

    if (fp == NULL) {
        printf("تعذر فتح الملف!\n");
        return 1;
    }

    // كتابة كود C داخل الملف
    fprintf(fp,
        "#include <stdio.h>\n"
        "int main() {\n"
        "    printf(\"العالم يغنى\\n\");\n"
        "    return 0;\n"
        "}\n"
    );

    // إغلاق الملف
    fclose(fp);

    printf("تم إنشاء الملف hello1.c بنجاح!\n");
    return 0;
}

fp = fopen("hello1.c", "w");

    if (fp == NULL) {
        printf("تعذر فتح الملف!\n");
        return 1;
    }

    // كتابة كود C داخل الملف
    fprintf(fp,
        "#include <stdio.h>\n"
        "int main() {\n"
        "    printf(\"العالم يغنى\\n\");\n"
        "    return 0;\n"
        "}\n"
    );

    // إغلاق الملف
    fclose(fp);

    printf("تم إنشاء الملف hello1.c بنجاح!\n");
    return 0;

fp = fopen("hello1.c", "w");

    if (fp == NULL) {
        printf("تعذر فتح الملف!\n");
        return 1;
    }

    // كتابة كود C داخل الملف
    fprintf(fp,
        "#include <stdio.h>\n"
        "int main() {\n"
        "    printf(\"العالم يغنى\\n\");\n"
        "    return 0;\n"
        "}\n"
    );

    // إغلاق الملف
    fclose(fp);

    printf("تم إنشاء الملف hello1.c بنجاح!\n");
    return 0;

fp = fopen("hello1.c", "w");

    if (fp == NULL) {
        printf("تعذر فتح الملف!\n");
        return 1;
    }

    // كتابة كود C داخل الملف
    fprintf(fp,
        "#include <stdio.h>\n"
        "int main() {\n"
        "    printf(\"العالم يغنى\\n\");\n"
        "    return 0;\n"
        "}\n"
    );

    // إغلاق الملف
    fclose(fp);

    printf("تم إنشاء الملف hello1.c بنجاح!\n");
    return 0;







#include <stdio.h>

int main() {
    FILE *fp;

    // إنشاء ملف باسم "new_code.c"
    fp = fopen("new_code.c", "w");

    if (fp == NULL) {
        printf("حدث خطأ أثناء إنشاء الملف.\n");
        return 1;
    }

    // كتابة كود بلغة C داخل الملف الجديد
    fprintf(fp,
        "#include <stdio.h>\n"
        "int main() {\n"
        "    printf(\"هذا ملف C تم إنشاؤه داخل كود C!\\n\");\n"
        "    return 0;\n"
        "}\n"
    );

    fclose(fp);
    printf("تم إنشاء الملف new_code.c بنجاح!\n");

    return 0;
}

"""شغال"""

# Commented out IPython magic to ensure Python compatibility.
# # نكتب الكود في ملف
# %%writefile hello.c
# #include <stdio.h>
# 
# int main() {
#     printf("مرحبًا بالعالم!\n");
#     return 0;
# }
#

"""شغال"""

!gcc hello.c -o hello
!./hello





# Commented out IPython magic to ensure Python compatibility.
# # نكتب الكود في ملف
# %%writefile hello1.c
# #include <stdio.h>
# 
# int main() {
#     printf("العالم يغنى برنامج زمان\n");
#     return 0;
# }
#

!gcc hello1.c -o hello1
!./hello1

# Commented out IPython magic to ensure Python compatibility.
# # نحفظ البرنامج في ملف
# %%writefile calculator.c
# #include <stdio.h>
# #include <math.h>
# 
# int main() {
#     int choice;
#     double num1, num2;
# 
#     printf("اختر العملية:\n");
#     printf("1. جمع\n");
#     printf("2. طرح\n");
#     printf("3. ضرب\n");
#     printf("4. قسمة\n");
#     printf("5. الجذر التربيعي\n");
#     printf("6. الجذر التكعيبي\n");
#     printf("اختيارك: ");
#     scanf("%d", &choice);
# 
#     if (choice >= 1 && choice <= 4) {
#         printf("ادخل الرقم الأول: ");
#         scanf("%lf", &num1);
#         printf("ادخل الرقم الثاني: ");
#         scanf("%lf", &num2);
#     } else if (choice == 5 || choice == 6) {
#         printf("ادخل الرقم: ");
#         scanf("%lf", &num1);
#     }
# 
#     switch(choice) {
#         case 1:
#             printf("النتيجة: %.2lf\n", num1 + num2);
#             break;
#         case 2:
#             printf("النتيجة: %.2lf\n", num1 - num2);
#             break;
#         case 3:
#             printf("النتيجة: %.2lf\n", num1 * num2);
#             break;
#         case 4:
#             if (num2 != 0)
#                 printf("النتيجة: %.2lf\n", num1 / num2);
#             else
#                 printf("خطأ: لا يمكن القسمة على صفر.\n");
#             break;
#         case 5:
#             if (num1 >= 0)
#                 printf("الجذر التربيعي: %.2lf\n", sqrt(num1));
#             else
#                 printf("خطأ: لا يمكن حساب الجذر التربيعي لعدد سالب.\n");
#             break;
#         case 6:
#             printf("الجذر التكعيبي: %.2lf\n", cbrt(num1));
#             break;
#         default:
#             printf("خيار غير صالح.\n");
#     }
# 
#     return 0;
# }
#

!gcc calculator.c -o calculator

!gcc calculator.c -o calculator -lm

!./calculator







!pip install pytube
!pip install moviepy

!pip install -q --upgrade pytube

from pytube import YouTube
from IPython.display import Video, display
import os

# تحميل الفيديو
url = "https://www.youtube.com/watch?v=dQw4w9WgXcQ"  # غيّر الرابط لو تحب
yt = YouTube(url)
stream = yt.streams.filter(file_extension='mp4').get_lowest_resolution()
stream.download(filename='video.mp4')

# عرض الفيديو داخل كولاب
display(Video("video.mp4", embed=True))

https://www.youtube.com/watch?v=Bj9BD2D3DzA

from pytube import YouTube
from IPython.display import Video, display
import os

# تحميل الفيديو
url = "https://www.youtube.com/watch?v=Bj9BD2D3DzA"  # غيّر الرابط لو تحب
yt = YouTube(url)
stream = yt.streams.filter(file_extension='mp4').get_lowest_resolution()
stream.download(filename='video.mp4')

# عرض الفيديو داخل كولاب
display(Video("video.mp4", embed=True))

from pytube import YouTube
from IPython.display import Video, display

url = "https://www.youtube.com/watch?v=2lAe1cqCOXo"  # فيديو تعليمي بسيط

yt = YouTube(url)
stream = yt.streams.filter(progressive=True, file_extension='mp4').get_lowest_resolution()
stream.download(filename='video.mp4')

display(Video("video.mp4", embed=True))

# تثبيت yt-dlp
!pip install -q yt-dlp

# تحميل الفيديو من يوتيوب
!yt-dlp -f 'mp4' -o 'video.mp4' "https://www.youtube.com/watch?v=dQw4w9WgXcQ"

#url = "https://www.youtube.com/watch?v=2lAe1cqCOXo"  # فيديو مفتوح تماماً
# تثبيت yt-dlp
#!pip install -q yt-dlp

# تحميل الفيديو من يوتيوب
#!yt-dlp -f 'mp4' -o 'video.mp4' "https://www.youtube.com/watch?v=2lAe1cqCOXo"
#https://www.youtube.com/watch?v=HdafI0t3sEY

!yt-dlp -f 'mp4' -o 'video.mp4' "https://www.youtube.com/watch?v=HdafI0t3sEY"

!yt-dlp -f 'mp4' -o 'video.mp4' "https://www.youtube.com/watch?v=HdafI0t3sEY"

from IPython.display import Video, display

display(Video("video.mp4", embed=True))

#!pip install yt_dlp

import yt_dlp
from IPython.display import Video

url = "https://www.youtube.com/watch?v=2lAe1cqCOXo"
output_file = "video.mp4"

ydl_opts = {
    'format': 'mp4',
    'outtmpl': output_file,
}

with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    ydl.download([url])

Video(output_file, embed=True)

import yt_dlp

# تحديد الخيارات مع ملف الكوكيز
ydl_opts = {
    'format': 'mp4',
    'outtmpl': 'video.mp4',
    'cookiefile': '/path/to/your/cookies.txt'  # المسار الكامل لملف cookies.txt
}

# تحميل الفيديو
with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    ydl.download(['https://www.youtube.com/watch?v=2lAe1cqCOXo'])

!chmod a+rx /content/yt-dlp

!yt-dlp -U



!pip install -q yt-dlp

!yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o 'video.%(ext)s' "https://www.youtube.com/watch?v=nnRZVEWQImM&t=464s"

from IPython.display import Video, display

display(Video("video.mp4", embed=True))

from google.colab import files
uploaded = files.upload()

!yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o 'video.%(ext)s' --cookies cookies.txt "رابط_الفيديو_هنا"

from google.colab import files
uploaded = files.upload()
!yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o 'video.%(ext)s' --cookies cookies.txt "https://www.youtube.com/watch?v=nnRZVEWQImM&t=464s"
from IPython.display import Video, display
display(Video("video.mp4", embed=True))

!pip install youtube-dl

!youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o 'video.%(ext)s' "https://www.youtube.com/watch?v=nnRZVEWQImM&t=464s" --ignore-errors --no-check-certificat

from IPython.display import Video, display

display(Video("video.mp4", embed=True))









from IPython.display import display, HTML

html_code = """
<div style="padding:20px; background-color:#222; color:white; font-size:24px; border-radius:10px;">
    👋 أهلاً بك في شاشة العرض!
</div>
"""

display(HTML(html_code))

import tkinter as tk

# إنشاء نافذة
root = tk.Tk()
root.title("شاشة العرض باستخدام Tkinter")

# ضبط حجم النافذة
root.geometry("300x200")

# إضافة مكونات إلى النافذة
label = tk.Label(root, text="👋 أهلاً بك في شاشة العرض!", font=("Arial", 14), fg="white", bg="#222")
label.pack(expand=True)

# تغيير خلفية النافذة
root.configure(bg='#222')

# بدء الحلقة الرئيسية للنافذة
root.mainloop()

!pip install gradio

import gradio as gr

# دالة تقوم بعرض رسالة مخصصة
def display_message(message):
    return f"👋 أهلاً بك في شاشة العرض! {message}"

# إنشاء واجهة Gradio مع إدخال نص
iface = gr.Interface(
    fn=display_message,                    # الدالة التي ستنفذ
    inputs=gr.Textbox(label="أدخل رسالتك هنا"),  # صندوق النص
    outputs="text",                         # إخراج النص
    title="شاشة عرض تفاعلية",              # العنوان
    description="أدخل نصًا وسيتم عرضه مع رسالة ترحيب!"  # الوصف
)

# تشغيل الواجهة
iface.launch()

from google.colab import files
uploaded = files.upload()
!yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o 'video.%(ext)s' --cookies cookies.txt "https://www.youtube.com/watch?v=nnRZVEWQImM&t=464s"
from IPython.display import Video, display
display(Video("video.mp4", embed=True))

from IPython.display import Video, display
display(Video("/content/100554-video-720.mp4", embed=True))

!yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o 'video.%(ext)s' --cookies cookies.txt "https://assets.mixkit.co/active_storage/video_items/100554/1726600418/100554-video-720.mp4"

from IPython.display import Video, display
display(Video("video.mp4", embed=True))

import cv2
import os

# تحديد مسار الفيديو
video_path = 'your_video.mp4'  # قم بتغيير هذا إلى مسار الفيديو الخاص بك
output_folder = 'output_images'  # مجلد حفظ الصور

# التأكد من أن المجلد موجود
if not os.path.exists(output_folder):
    os.makedirs(output_folder)

# تحميل الفيديو
cap = cv2.VideoCapture(video_path)

# التحقق من أن الفيديو تم تحميله بشكل صحيح
if not cap.isOpened():
    print("Error: Unable to open the video file.")
else:
    # الحصول على عدد الإطارات في الفيديو
    frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))

    # المتغير لتخزين رقم الصورة
    frame_num = 0

    # قراءة الإطارات من الفيديو
    while cap.isOpened():
        ret, frame = cap.read()  # قراءة إطار من الفيديو

        if not ret:
            break

        # حفظ الإطار كصورة في المجلد المحدد
        frame_filename = os.path.join(output_folder, f"frame_{frame_num:04d}.jpg")
        cv2.imwrite(frame_filename, frame)

        # عرض تقدم التحويل
        print(f"Saving frame {frame_num + 1}/{frame_count}")

        frame_num += 1

    # إغلاق الفيديو بعد الانتهاء
    cap.release()

print("Video frames have been extracted and saved as images.")

"""### لتحويل فيديو إلى مجموعة من الصور."""

import cv2
import os

# تحديد مسار الفيديو
video_path = 'video.mp4'  # قم بتغيير هذا إلى مسار الفيديو الخاص بك
output_folder = 'output_images'  # مجلد حفظ الصور

# التأكد من أن المجلد موجود
if not os.path.exists(output_folder):
    os.makedirs(output_folder)

# تحميل الفيديو
cap = cv2.VideoCapture(video_path)

# التحقق من أن الفيديو تم تحميله بشكل صحيح
if not cap.isOpened():
    print("Error: Unable to open the video file.")
else:
    # الحصول على عدد الإطارات في الفيديو
    frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))

    # المتغير لتخزين رقم الصورة
    frame_num = 0

    # قراءة الإطارات من الفيديو
    while cap.isOpened():
        ret, frame = cap.read()  # قراءة إطار من الفيديو

        if not ret:
            break

        # حفظ الإطار كصورة في المجلد المحدد
        frame_filename = os.path.join(output_folder, f"frame_{frame_num:04d}.jpg")
        cv2.imwrite(frame_filename, frame)

        # عرض تقدم التحويل
        print(f"Saving frame {frame_num + 1}/{frame_count}")

        frame_num += 1

    # إغلاق الفيديو بعد الانتهاء
    cap.release()

print("Video frames have been extracted and saved as images.")



import matplotlib.pyplot as plt
import matplotlib.image as mpimg

img = mpimg.imread('path/to/your/image.jpg') # استبدل 'path/to/your/image.jpg' بمسار صورتك

plt.imshow(img)
plt.show()

Image('path/to/your/image.jpg') # استبدل 'path/to/your/image.jpg' بمسار صورتك



"""### عرض صورة"""

import matplotlib.pyplot as plt
import matplotlib.image as mpimg

img = mpimg.imread('/content/output_images/frame_0004.jpg') # افترض أن صورتك اسمها my_image.jpg وموجودة في نفس مجلد نوتبوك Colab

plt.imshow(img)
plt.title('My Image')
plt.show()

import matplotlib.pyplot as plt
import matplotlib.image as mpimg

img = mpimg.imread('/content/output_images/frame_0233.jpg') # افترض أن صورتك اسمها my_image.jpg وموجودة في نفس مجلد نوتبوك Colab

plt.imshow(img)
plt.title('My Image')
plt.show()

from pytube import YouTube
import os

def downloadYouTube(videourl, path):

    yt = YouTube(videourl)
    yt = yt.streams.filter(progressive=True, file_extension='mp4').order_by('resolution').desc().first()
    if not os.path.exists(path):
        os.makedirs(path)
    yt.download(path)

downloadYouTube('https://www.youtube.com/watch?v=zNyYDHCg06c', './videos/FindingNemo1')

from pytube import YouTube
import os
import threading

def downloadYouTube(videourl, path):
    print("Started download from url ", videourl)
    yt = YouTube(videourl)
    yt = yt.streams.filter(progressive=True, file_extension='mp4').order_by('resolution').desc().first()
    if not os.path.exists(path):
        os.makedirs(path)
    yt.download(path)
    print("Downloaded video ", yt.title)

links = ['https://www.youtube.com/watch?v=a3ICNMQW7Ok', 'https://www.youtube.com/watch?v=onMFJvk1FR4']

for link in links:
    video = threading.Thread(target=downloadYouTube, args=(link, './videos/'))
    video.start()

for link in links:
    video_name = downloadYouTube(link, './videos/')
    print('Downloaded '+ video_name)

from pytube import YouTube
import os
import threading

def downloadYouTube(videourl, path):
    print("Started download from url ", videourl)
    yt = YouTube(videourl)
    yt = yt.streams.filter(progressive=True, file_extension='mp4').order_by('resolution').desc().first()
    if not os.path.exists(path):
        os.makedirs(path)
    yt.download(path)
    print("Downloaded video ", yt.title)

links = ['https://www.youtube.com/watch?v=a3ICNMQW7Ok', 'https://www.youtube.com/watch?v=onMFJvk1FR4']

for link in links:
    video = threading.Thread(target=downloadYouTube, args=(link, './videos/'))
    video.start()

!Started download from url  https://www.youtube.com/watch?v=onMFJvk1FR4

!youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' -o 'video.%(ext)s' "https://www.youtube.com/watch?v=nnRZVEWQImM&t=464s"

!youtube-dl -h

!youtube-dl

https://www.youtube.com/watch?v=zNyYDHCg06c

!youtube-dl https://www.youtube.com/watch?v=zNyYDHCg06c --verbose







!curl -L https://github.com/yt-dlp/yt-dlp/raw/master/public.key | gpg --import
!gpg --verify SHA2-256SUMS.sig SHA2-256SUMS
!gpg --verify SHA2-512SUMS.sig SHA2-512SUMS

"""https://github.com/yt-dlp/yt-dlp"""

!youtube-dl -i --yes-playlist https://www.youtube.com/watch?v=zNyYDHCg06c



!chmod +x /content/yt-dlp_linux

!sudo cp /content/yt-dlp_linux /usr/local/bin/yt-dlp

!wget /content/yt-dlp_linux
!chmod +x /content/yt-dlp_linux
!sudo cp /content/yt-dlp_linux /usr/local/bin/yt-dlp
!yt-dlp --version # للتحقق من التثبيت

!wget https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux # تحميل الملف

!chmod a+x yt-dlp_linux # تغيير صلاحيات الوصول

!mv yt-dlp_linux /usr/local/bin/yt-dlp # نقل الملف إلى PATH

!yt-dlp --version # التحقق من الإصدار

"""https://github.com/yt-dlp/yt-dlp"""

!yt-dlp --enable-file-urls  URL https://www.youtube.com/watch?v=zNyYDHCg06c

!yt-dlp --print filename -o "test video.%(ext)s" BaW_jenozKc
!test /content/Finding Nemo- Dory's Best Moments [zNyYDHCg06c].webm

from IPython.display import Video, display
display(Video("/content/Finding Nemo- Dory's Best Moments [zNyYDHCg06c].webm", embed=True))

